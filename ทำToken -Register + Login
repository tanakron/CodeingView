
// Backend. Nodejs



router.post("/register", async (req, res) => {
  try {
    let first_name = req.body.first_name;
    let last_name = req.body.last_name;
    let email = req.body.email;
    let password = req.body.password;
    if (!(email && password && first_name && last_name)) {
      res.status(400).send("All input is required");
    }

    //ดึงข้อมูลมาเช็ค ว่าตรงกันไหม
    const oldUser = await db.collection("usersid").findOne({ email });
    if (oldUser) {
      return res.status(409).send("Hey user already exist. please login");
    }
    encryptedPassword = await bcrypt.hash(password, 10);
    // console.log(bet3up + betpay);
    // Create Token
    const token = jwt.sign(
      { user_id: user._id, email },
      process.env.TOKEN_KEY,
      {
        expiresIn: "2h",
      }
    );
    //save user token
    user.token = token;
    res.status(201).json(user);
    await db.collection("usersid").insertOne({
      first_name: first_name,
      last_name: last_name,
      email: email,
      password: encryptedPassword,
      token: token,
      id: Math.ceil(Math.random() * 10000),
      createdateDate: moment(new Date()).format("MMMM Do YYYY, h:mm:ss a "),
    });
  } catch (err) {
    console.log(err);
  }

  res.end();
});

router.post("/login", async (req, res) => {
  //Login
  try {
    //Get user input
    const { email, password } = req.body;

    // validate user  input
    if (!(email && password)) {
      res.status(400).send("All input  is required");
    }
    // validate user  input  exist  in our database
    const user = await db.collection("usersid").findOne({ email });
    if (user && (await bcrypt.compare(password, user.password))) {
      const token = jwt.sign(
        { user_id: user._id, email },
        process.env.TOKEN_KEY,
        {
          expiresIn: "2h",
        }
      );
      user.token = token;
      res.status(200).json(user);
    }
    res.status(400).send("Invalid ");
  } catch (err) {
    console.log(err);
  }
});
